name: Git Fame

on:
  pull_request:
    branches:
      - main
permissions:
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    outputs:
      stats: ${{ steps.stats.outputs.stats }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch the entire history

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install git-fame
        run: pip install git-fame

      - name: Run git fame and capture output
        run: |
          echo $(git fame --incl=.java --loc=surv -s -e -w -M -C -R ./core/src/main) > index.md
        id: stats
      - run: cat index.md

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
  
            const content = fs.readFileSync('index.md', 'utf8');

            const tableData = content.match(/\|(.+?)\|(.+?)\|(.+?)\|(.+?)\|(.+?)\|/g);
            
            // Construct the Markdown table header
            const tableHeader = '| Author | loc | coms | fils | distribution |\n|:------|-----:|------:|------:|:--------------|';
  
            // Construct the Markdown table rows
            const tableRows = tableData.map(row => row.replace(/\|/g, '').trim()).join('\n');
  
            // Construct the final table
            const markdownTable = `${tableHeader}\n${tableRows}`;
          
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message,
            });