name: Git Fame

on:
  pull_request:
    branches:
      - main
permissions:
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch the entire history

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install git-fame
        run: pip install git-fame

      - name: Run git fame and capture output
        id: run-git-fame
        run: |
          git fame --incl=.java --loc=surv --bytype -w -M -C -R ./core/src/main > git-fame-output.txt
          
          # Read the output from the file and set it as an output variable
          output=$(cat git-fame-output.txt)
          echo "::set-output name=fame::${output}"

        # Store the git fame output in a file for later use
        continue-on-error: true

      - name: Comment PR
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const output = `${{steps.run-git-fame.outputs.fame}}`;
            const message = `Here are the contributor statistics:\n\`\`\`\n${output}\n\`\`\``;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message,
            });