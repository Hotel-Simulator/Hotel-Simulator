name: Git Fame

on:
  pull_request:
    branches:
      - main
permissions:
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.stats.outputs.stats }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch the entire history

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install git-fame
        run: pip install git-fame

      - name: Run git fame and capture output
        run: |
          echo "::set-output name=fame::$(git fame --incl=.java --loc=surv -s -e -w -M -C -R ./core/src/main)"
        id: stats
  send-comment:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Comment PR
        uses: actions/github-script@v6
        env:
          stats: ${{ steps.git_fame.outputs.fame }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { stats } = process.env;
            const message = `Here are the contributor statistics:\n\`\`\`\n${stats}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message,
            });